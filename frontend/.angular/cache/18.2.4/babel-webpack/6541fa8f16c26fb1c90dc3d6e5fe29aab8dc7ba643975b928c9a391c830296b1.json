{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class RuleService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/rules`;\n  }\n  getRules() {\n    return this.http.get(this.apiUrl);\n  }\n  createRule(rule) {\n    return this.http.post(this.apiUrl, rule);\n  }\n  updateRule(rule) {\n    return this.http.put(`${this.apiUrl}/${rule.id}`, rule);\n  }\n  deleteRule(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  applyRules() {\n    return this.http.post(`${this.apiUrl}/apply`, {});\n  }\n  static #_ = this.ɵfac = function RuleService_Factory(__ngFactoryType__) {\n    i0.ɵɵinvalidFactory();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RuleService,\n    factory: RuleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","RuleService","constructor","http","apiUrl","getRules","get","createRule","rule","post","updateRule","put","id","deleteRule","delete","applyRules","_","factory","ɵfac","providedIn"],"sources":["/home/runner/IoT-Logic-engine/frontend/src/app/services/rule.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Rule } from '../models/rule.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RuleService {\n  private apiUrl = `${environment.apiUrl}/rules`;\n\n  constructor(private http: HttpClient) {}\n\n  getRules(): Observable<Rule[]> {\n    return this.http.get<Rule[]>(this.apiUrl);\n  }\n\n  createRule(rule: Rule): Observable<Rule> {\n    return this.http.post<Rule>(this.apiUrl, rule);\n  }\n\n  updateRule(rule: Rule): Observable<Rule> {\n    return this.http.put<Rule>(`${this.apiUrl}/${rule.id}`, rule);\n  }\n\n  deleteRule(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  applyRules(): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/apply`, {});\n  }\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;AAK5D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,QAAQ;EAEP;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACF,IAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAII,IAAI,CAACI,EAAE,EAAE,EAAEJ,IAAI,CAAC;EAC/D;EAEAK,UAAUA,CAACD,EAAU;IACnB,OAAO,IAAI,CAACT,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACvD;EAEAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACZ,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAE,EAAE,CAAC;EACxD;EAAC,QAAAY,CAAA,G;;;;WAvBUf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}