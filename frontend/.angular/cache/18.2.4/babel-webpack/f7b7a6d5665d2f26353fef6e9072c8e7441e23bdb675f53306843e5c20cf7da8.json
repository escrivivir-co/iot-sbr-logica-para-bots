{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class TelemetryService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/telemetry`;\n  }\n  getTelemetryStatus() {\n    return this.http.get(`${this.apiUrl}/status`);\n  }\n  processTelemetry(telemetry) {\n    return this.http.post(`${this.apiUrl}/process`, {\n      telemetry\n    });\n  }\n  static #_ = this.ɵfac = function TelemetryService_Factory(__ngFactoryType__) {\n    i0.ɵɵinvalidFactory();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TelemetryService,\n    factory: TelemetryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","TelemetryService","constructor","http","apiUrl","getTelemetryStatus","get","processTelemetry","telemetry","post","_","factory","ɵfac","providedIn"],"sources":["/home/runner/IoT-Logic-engine/frontend/src/app/services/telemetry.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryService {\n  private apiUrl = `${environment.apiUrl}/telemetry`;\n\n  constructor(private http: HttpClient) {}\n\n  getTelemetryStatus(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/status`);\n  }\n\n  processTelemetry(telemetry: any): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/process`, { telemetry });\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;AAK5D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,YAAY;EAEX;EAEvCC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,SAAS,CAAC;EACtD;EAEAG,gBAAgBA,CAACC,SAAc;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,MAAM,UAAU,EAAE;MAAEI;IAAS,CAAE,CAAC;EACrE;EAAC,QAAAE,CAAA,G;;;;WAXUT,gBAAgB;IAAAU,OAAA,EAAhBV,gBAAgB,CAAAW,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}